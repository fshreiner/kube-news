Aplicação rodando na porta 8080
Executing (default): CREATE TABLE IF NOT EXISTS "Posts" ("id"   SERIAL , "title" VARCHAR(255), "summary" VARCHAR(255), "publishDate" DATE, "content" VARCHAR(2000), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Posts' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Posts' AND tc.table_catalog = 'kubenews'
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "title" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "summary" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "summary" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "summary" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "publishDate" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "publishDate" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "publishDate" TYPE DATE;
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "content" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "content" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "content" TYPE VARCHAR(2000);
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Posts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Aplicação rodando na porta 8080
Executing (default): CREATE TABLE IF NOT EXISTS "Posts" ("id"   SERIAL , "title" VARCHAR(255), "summary" VARCHAR(255), "publishDate" DATE, "content" VARCHAR(2000), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Posts' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Posts' AND tc.table_catalog = 'kubenews'
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "title" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "summary" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "summary" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "summary" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "publishDate" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "publishDate" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "publishDate" TYPE DATE;
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "content" DROP NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "content" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "content" TYPE VARCHAR(2000);
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Posts" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Posts" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Posts" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Posts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
